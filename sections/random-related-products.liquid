<link
  rel="stylesheet"
  href="{{ 'component-card.css' | asset_url }}"
  media="print"
  onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-price.css' | asset_url }}"
  media="print"
  onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-product-grid.css' | asset_url }}"
  media="print"
  onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'section-product-recommendations.css' | asset_url }}"
  media="print"
  onload="this.media='all'">

<noscript>{{ 'component-card.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-price.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-product-grid.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'section-product-recommendations.css' | asset_url | stylesheet_tag }}</noscript>

{% assign collection_handles = "meng,bruiser-brody,randy-savage,ric-flair,major-wrestling-figure-podcast-action-toy-figures,harley-race,dusty-rhodes,matt-cardona,brian-myers,earl-hebner,hawk,animal,andre-the-giant,sgt-slaughter,100-lucha,100-lucha-micran-telefe-action-toy-figures,2-cold-scorpio,aaa-action-toy-figures,aaw-dvds,abdullah-the-butcher,abyss,accessories,accion-en-el-ring,action-figures-and-bobblehead-to-re-arrange,adam-bomb" | split: "," %}

<section class="random related-products page-width">
  <h2 class="product-recommendations__heading title">
    {{ section.settings.heading | escape }}
  </h2>
  <div class="products-grid row owl-carousel">
    <ul
      id="random-products-list"
      class="grid grid--2-col product-grid grid--4-col-desktop grid--quarter-max"
      role="list">
      {% comment %}
        Store collection handles for JavaScript randomization
      {% endcomment %}
      <script>
        window.collectionHandles = {{ collection_handles | json }};
      </script>

      {% comment %}
        Get all products from collections
      {% endcomment %}
      {% for handle in collection_handles %}
        {% assign collection = collections[handle] %}
        {% if collection and collection.products_count > 0 %}
          {% for product in collection.products %}
            <li class="grid__item hidden" data-collection="{{ handle }}" data-product-id="{{ product.id }}">
              {% render 'product-card',
                product_card_product: product,
                media_size: section.settings.image_ratio,
                show_secondary_image: section.settings.show_secondary_image,
                add_image_padding: section.settings.add_image_padding,
                show_vendor: section.settings.show_vendor,
                show_image_outline: section.settings.show_image_outline,
                show_rating: section.settings.show_rating
              %}
            </li>
          {% endfor %}
        {% endif %}
      {% endfor %}
    </ul>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const productList = document.getElementById("random-products-list");
    if (!productList) return;

    // Hide all products initially
    const allProducts = productList.querySelectorAll('.grid__item');
    allProducts.forEach(product => product.classList.add('hidden'));

    // Function to get random items from array
    function getRandomItems(array, count) {
      const shuffled = [...array].sort(() => 0.5 - Math.random());
      return shuffled.slice(0, count);
    }

    // Get 8 random collections
    const randomCollections = getRandomItems(window.collectionHandles, 8);
    
    // For each random collection, get one random product
    randomCollections.forEach(collectionHandle => {
      const collectionProducts = productList.querySelectorAll(`[data-collection="${collectionHandle}"]`);
      if (collectionProducts.length > 0) {
        const randomProduct = getRandomItems(Array.from(collectionProducts), 1)[0];
        if (randomProduct) {
          randomProduct.classList.remove('hidden');
        }
      }
    });
  });
</script>

<style>
  .hidden {
    display: none;
  }
</style>

{% schema %}

  {
    "name": "Random Products",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "default": "You may also like",
        "label": "t:sections.product-recommendations.settings.heading.label"
      },
      {
        "type": "select",
        "id": "image_ratio",
        "options": [
          {
            "value": "adapt",
            "label": "t:sections.product-recommendations.settings.image_ratio.options__1.label"
          }, {
            "value": "portrait",
            "label": "t:sections.product-recommendations.settings.image_ratio.options__2.label"
          }, {
            "value": "square",
            "label": "t:sections.product-recommendations.settings.image_ratio.options__3.label"
          }
        ],
        "default": "adapt",
        "label": "t:sections.product-recommendations.settings.image_ratio.label"
      }, {
        "type": "checkbox",
        "id": "show_secondary_image",
        "default": false,
        "label": "t:sections.product-recommendations.settings.show_secondary_image.label"
      }, {
        "type": "checkbox",
        "id": "add_image_padding",
        "default": false,
        "label": "t:sections.product-recommendations.settings.add_image_padding.label"
      }, {
        "type": "checkbox",
        "id": "show_vendor",
        "default": false,
        "label": "t:sections.product-recommendations.settings.show_vendor.label"
      }, {
        "type": "checkbox",
        "id": "show_image_outline",
        "default": true,
        "label": "t:sections.product-recommendations.settings.show_image_outline.label"
      }, {
        "type": "checkbox",
        "id": "show_rating",
        "default": false,
        "label": "t:sections.product-recommendations.settings.show_rating.label"
      }
    ],
    "presets": [
      {
        "name": "Random Products"
      }
    ]
  }
{% endschema %}